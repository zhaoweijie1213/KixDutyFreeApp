@page "/"
@using KixDutyFree.App.Models.Entity
@using KixDutyFree.App.Service
@using KixDutyFree.Shared.Models.Input
@using KixDutyFree.Shared.Services
@using KixDutyFree.App.Pages.Components.Index
@inject ProductService productService
@inject IJSRuntime JSRuntime
@inject LoadingService loadingService

<PageTitle>商品列表</PageTitle>

<MContainer Fluid>
    <MRow Cols="12">
        <MCol>
            <MButton IconName="mdi-plus" Color="blue-grey" OnClick="ShowAddModal">新增商品</MButton>
        </MCol>
    </MRow>
    <MRow>
        @foreach (var product in products)
        {
            <MCol Md="4" Lg="3" Xl="2">
                <MCard>
                    <ProgressContent>
                        <MProgressLinear Color="deep-purple" Height="10" Indeterminate />
                    </ProgressContent>
                    <ChildContent>

                        <MImage Alt="@product.Id" Height="250" Src="@product.Image" />

                        <MCardTitle>@product.Name</MCardTitle>

                        <MCardText>
                            <div class="my-4 text-subtitle-1">ID: @product.Id</div>
                            <div>创建日期: @product.CreateTime.ToString("yyyy/MM/dd HH:mm:ss")</div>
                        </MCardText>

                        <MCardActions>
                            <MButton Color="deep-purple lighten-2" Text @onclick="@(() => OpenProductPage(product.Address))">商品页面</MButton>
                            <MButton Color="red accent-3" Text @onclick="@(() => DelAsync(product.Id))">删除</MButton>
                        </MCardActions>
                    </ChildContent>
                </MCard>
            </MCol>
        }
    </MRow>
</MContainer>

<AddProduct @bind-Show="showAddDialog"></AddProduct>
@code {
    public List<ProductInfoEntity> products { get; set; } = new();

    /// <summary>
    /// 显示模态框
    /// </summary>
    private bool showAddDialog{ get; set; }

    protected override async Task OnInitializedAsync()
    {
        products = await productService.GetProductsAsync();
        loadingService.Hide();
    }

    /// <summary>
    /// 显示模态框
    /// </summary>
    private void ShowAddModal()
    {
        showAddDialog = true;
    }

    private async Task OpenProductPage(string address)
    {
        await JSRuntime.InvokeVoidAsync("open", address, "_blank");
    }

    private async Task DelAsync(string id)
    {
        var status = await productService.DelAsync(id);
        if (status)
        {
            products = await productService.GetProductsAsync();
        }
        else
        {

        }
    }
}
